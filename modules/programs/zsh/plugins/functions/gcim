#
# vim:ft=zsh:
#

function gcim() {
	{ # begin the always block
		function $0_help()
		{
			print_info "${log_depth}" "USAGE: gcim [options] <message>"
			print_info "${log_depth}" "\t -h, --help        - this message"
			print_info "${log_depth}" "\t     --log-depth   - change the depth of the log Default: ${log_depth}"
		}

		local log_depth=0

		while [[ $# -ge 1 ]]; do
			case "${1}" in
				-h|--help)
					$0_help
					return 0
					;;
				--log-depth)
					log_depth="${2}"
					if [[ -z "${log_depth}" ]]; then
						print_error "${log_depth}" "--log-depth requires an argument"
						$0_help
						return 1
					fi
					shift 2
					;;
				*)
					local message="${@}"
					break
					;;
			esac
		done

		if [[ -z "${message}" ]]; then
			print_error "${log_depth}" "message is required"
			$0_help
			return 1
		fi

		if [[ "x$(@git_bin@ rev-parse --git-dir 2> /dev/null)" = "x" ]]; then
			print_error "${log_depth}" "not inside a git repository"
			return 1
		fi

		local branch="$(current_branch)"
		local story="$(echo "${branch}" | grep '^[[:alpha:]][[:alpha:]]*-[[:digit:]][[:digit:]]*$')"

		if [[ "x${story}" != "x" ]]; then
			story=" (${story})"
		fi

		if [[ "${SSH_AUTH_SOCK:-}" != "${HOME}/.gnupg/S.gpg-agent.ssh" ]]; then
			@git_bin@ commit --no-sign -m "${message}${story}"
		else
			@git_bin@ commit -m "${message}${story}"
		fi
	} always {
		unfunction -m "$0_*"
	}
}
