#
# vim:ft=zsh:
#

# TODO: use open_tunnel to make the tunnel
function tmycli() {
	{ # begin an always block
		function D0_help()
		{
			print_info "${log_depth}" "USAGE: tmycli [options]"
			print_info "${log_depth}" "\t -h, --help                - this message"
			print_info "${log_depth}" "\t -b, --bastion             - the bastion host [Default: ${bastion_host}]"
			print_info "${log_depth}" "\t -w, --bastion-user        - the username for SSH to the bastion host [Default: ${bastion_username}]"
			print_info "${log_depth}" "\t -h, --host                - the database host [Default: ${mysql_host}]"
			print_info "${log_depth}" "\t -o, --port                - the database port [Default: ${mysql_port}]"
			print_info "${log_depth}" "\t -u, --username            - the username of the database host [Default: ${mysql_username}]"
			print_info "${log_depth}" "\t -p, --password            - the password of the database host [Default:${mysql_password}]"
			print_info "${log_depth}" "\t -d, --database            - the database name [Default:${mysql_database}]"
		}

		function D0_find_open_port() {
			if [[ "$( uname )" = "Darwin" ]]; then
				while [[ "$( @netstat_bin@ -anp tcp | awk "\$6 == \"LISTEN\" && \$4 ~ \".${tunnel_port}\"" | wc -l)" -gt 0 ]]; do
					tunnel_port=$(( tunnel_port + 1 ))
				done
			elif [[ "$( uname )" = "Linux" ]]; then
				while [[ "$( @netstat_bin@ -lnt | awk "\$6 == \"LISTEN\" && \$4 ~ \".${tunnel_port}\"" | wc -l)" -gt 0 ]]; do
					tunnel_port=$(( tunnel_port + 1 ))
				done
			else
				print_error 0 "$( uname ) is not supported"
				return 1
			fi
		}

		function D0_wait_for_tunnel_port() {
			if [[ "$( uname )" = "Darwin" ]]; then
				while [[ "$( @netstat_bin@ -anp tcp | awk "\$6 == \"LISTEN\" && \$4 ~ \".${tunnel_port}\"" | wc -l)" -eq 0 ]]; do
					sleep 0.3
				done
			elif [[ "$( uname )" = "Linux" ]]; then
				while [[ "$( @netstat_bin@ -lnt | awk "\$6 == \"LISTEN\" && \$4 ~ \".${tunnel_port}\"" | wc -l)" -eq 0 ]]; do
					sleep 0.3
				done
			else
				print_error 0 "$( uname ) is not supported"
				return 1
			fi
		}

		function D0_open_tunnel() {
			# open the tunnel
			@ssh_bin@ -f -N -L "${tunnel_port}:${mysql_host}:${mysql_port}" "${bastion_username}"@"${bastion_host}"
			# shellcheck disable=SC2009
			ssh_pid="$( ps aux | grep "[s]sh -f -N -L ${tunnel_port}:${mysql_host}:${mysql_port} ${bastion_username}@${bastion_host}" | awk '{print $2}' )"
		}

		function D0_validate_options() {
			if [[ -z "${tunnel_port}" ]]; then
				print_error 0 "tunnel_port is not defined, aborting..."
				D0_help
				return 1
			fi
			if [[ -z "${bastion_host}" ]]; then
				print_error 0 "bastion_host is not defined, aborting..."
				D0_help
				return 1
			fi
			if [[ -z "${bastion_username}" ]]; then
				print_error 0 "bastion_username is not defined, aborting..."
				D0_help
				return 1
			fi
			if [[ -z "${mysql_host}" ]]; then
				print_error 0 "mysql_host is not defined, aborting..."
				D0_help
				return 1
			fi
			if [[ -z "${mysql_port}" ]]; then
				print_error 0 "mysql_port is not defined, aborting..."
				D0_help
				return 1
			fi
			if [[ -z "${mysql_username}" ]]; then
				print_error 0 "mysql_username is not defined, aborting..."
				D0_help
				return 1
			fi
			if [[ -z "${mysql_password}" ]]; then
				print_error 0 "mysql_password is not defined, aborting..."
				D0_help
				return 1
			fi
			if [[ -z "${mysql_database}" ]]; then
				print_error 0 "mysql_database is not defined, aborting..."
				D0_help
				return 1
			fi
		}

		local log_depth=0
		local tunnel_port=13300
		local bastion_host=
		local bastion_username=
		local mysql_host=
		local mysql_port=3306
		local mysql_username=
		local mysql_password=
		local mysql_database=

		while [[ $# -ge 1 ]]; do
			case "${1}" in
				-h|--help)
					D0_help
					return 0
					;;
				-b|--bastion)
					bastion_host="${2}"
					shift 2
					;;
				-w|--bastion-user)
					bastion_username=${2}
					shift 2
					;;
				-h|--host)
					mysql_host=${2}
					shift 2
					;;
				-o|--port)
					mysql_port=${2}
					shift 2
					;;
				-u|--username)
					mysql_username=${2}
					shift 2
					;;
				-p|--password)
					mysql_password=${2}
					shift 2
					;;
				-d|--database)
					mysql_database=${2}
					shift 2
					;;
				*)
					D0_help
					return 1
					;;
			esac
		done

		D0_validate_options
		D0_find_open_port
		D0_open_tunnel
		D0_wait_for_tunnel_port
		@mycli_bin@ --host "localhost" --port "${tunnel_port}" --user "${mysql_username}" --password "${mysql_password}" --database "${mysql_database}"
	} always {
		if [[ -n "${ssh_pid}" ]]; then
			kill "${ssh_pid}"
		fi
		unfunction -m "$0_*"
	}
}
